{"version":3,"sources":["webpack:///./src/components/blog/stub.js","webpack:///./src/components/blog/index.js","webpack:///./src/pages/blog.js"],"names":["Wrapper","styled","div","ImageWrapper","ImageComponent","Image","TextWrapper","Category","span","Title","Subtitle","Date","BlogStub","slug","title","date","subtitle","image","categories","caption","bottom","to","fluid","map","category","index","key","BlogWrapper","BlogText","BlogIndex","data","useStaticQuery","style","textAlign","posts","edges","post","postInfo","node","frontmatter","postImage","images","find","x","childImageSharp","originalName","fields","BlogPage"],"mappings":"8yDAOA,IAAMA,EAAUC,IAAOC,IAAV,KAcPC,EAAeF,IAAOC,IAAV,KAaZE,EAAiBH,YAAOI,IAAPJ,CAAH,KAOdK,EAAcL,IAAOC,IAAV,KAWXK,EAAWN,IAAOO,KAAV,KAaRC,EAAQR,IAAOO,KAAV,KAcLE,EAAWT,IAAOO,KAAV,KAMRG,EAAOV,IAAOO,KAAV,KA2CKI,IArCE,SAAC,GAQX,IAPLC,EAOI,EAPJA,KACAC,EAMI,EANJA,MACAC,EAKI,EALJA,KACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,MAEAC,GACI,EAFJC,QAEI,EADJD,YAEA,OACE,kBAAC,IAAD,CAAME,QAAM,GACV,kBAACpB,EAAD,KACE,kBAACG,EAAD,KACE,kBAAC,IAAD,CAAakB,GAAE,QAAUR,GACvB,kBAACT,EAAD,CAAgBkB,MAAOL,MAG3B,kBAACX,EAAD,KACGY,EAAWK,KAAI,SAACC,EAAUC,GAAX,OACd,kBAAClB,EAAD,CAAUmB,IAAKF,GACZC,EAAQ,KAAO,GAChB,kBAAC,IAAD,CAAaJ,GAAE,aAAeG,EAAf,KACZA,OAIP,kBAACf,EAAD,KACE,kBAAC,IAAD,CAAaY,GAAE,QAAUR,GAASC,IAEpC,kBAACJ,EAAD,KAAWM,GACX,kBAACL,EAAD,KAAOI,Q,kcCnHjB,IAAMY,EAAc1B,IAAOC,IAAV,KAKX0B,EAAW3B,IAAOC,IAAV,KA4EC2B,EArEG,WAChB,IAAMC,EAAOC,yBAAe,cAwC5B,OACE,kBAACJ,EAAD,KACE,yBAAKK,MAAO,CAAEC,UAAW,WAAzB,cACA,kBAACL,EAAD,gBACCE,EAAKI,MAAMC,MAAMZ,KAAI,SAAAa,GACpB,IAAMC,EAAWD,EAAKE,KAAKC,YAErBC,EAAYV,EAAKW,OAAON,MAAMO,MAClC,SAAAC,GAAC,OAAIA,EAAEL,KAAKM,gBAAgBtB,MAAMuB,eAAiBR,EAASpB,SAG9D,OACE,kBAAC,IAAD,CACEJ,KAAMuB,EAAKE,KAAKQ,OAAOjC,KACvBa,IAAKW,EAASvB,MACdA,MAAOuB,EAASvB,MAChBC,KAAMsB,EAAStB,KACfC,SAAUqB,EAASrB,SACnBC,MAAOuB,EAAUF,KAAKM,gBAAgBtB,MACtCH,QAASkB,EAASlB,QAClBD,WAAYmB,EAASnB,kBC/DlB6B,UATE,WACf,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKjC,MAAM,SACX,kBAAC,EAAD","file":"component---src-pages-blog-js-bc019e756861386567c0.js","sourcesContent":["import React from \"react\"\nimport Image from \"gatsby-image\"\nimport styled from \"styled-components\"\nimport Fade from \"react-reveal/Fade\"\n\nimport LinkWrapper from \"../linkWrapper\"\n\nconst Wrapper = styled.div`\n  margin: 30px auto;\n  clear: left;\n  display: block;\n  width: 800px;\n  overflow: hidden;\n  background-color: white;\n  border-radius: 20px;\n\n  @media (max-width: 850px) {\n    width: 85%;\n  }\n`\n\nconst ImageWrapper = styled.div`\n  float: left;\n  width: 39%;\n\n  :hover {\n    filter: brightness(60%);\n    -webkit-transition: all 0.5s ease-in-out;\n  }\n\n  @media (max-width: 850px) {\n    width: 100%;\n  }\n`\nconst ImageComponent = styled(Image)`\n  width: 100%;\n  border-radius: 20px 0 0 20px;\n  @media (max-width: 850px) {\n    border-radius: 20px 20px 0 0;\n  }\n`\nconst TextWrapper = styled.div`\n  margin: auto;\n  width: 55%;\n  display: inline-block;\n  padding: 20px 3%;\n  @media (max-width: 850px) {\n    padding: 20px 20px;\n    width: 90%;\n  }\n`\n\nconst Category = styled.span`\n  text-transform: uppercase;\n  font-size: 15px;\n\n  a {\n    color: purple;\n  }\n\n  a:hover {\n    color: #a9a9a9;\n  }\n`\n\nconst Title = styled.span`\n  margin: 5px 0px 10px 0px;\n  font-size: 30px;\n  display: block;\n\n  a {\n    color: black;\n  }\n\n  a:hover {\n    color: purple;\n  }\n`\n\nconst Subtitle = styled.span`\n  display: block;\n  font-size: 17px;\n  margin: 0px 0px 15px 0px;\n`\n\nconst Date = styled.span`\n  display: block;\n  font-size: 14px;\n  font-family: \"Barlow\", sans-serif;\n`\n\nconst BlogStub = ({\n  slug,\n  title,\n  date,\n  subtitle,\n  image,\n  caption,\n  categories,\n}) => {\n  return (\n    <Fade bottom>\n      <Wrapper>\n        <ImageWrapper>\n          <LinkWrapper to={`/post${slug}`}>\n            <ImageComponent fluid={image} />\n          </LinkWrapper>\n        </ImageWrapper>\n        <TextWrapper>\n          {categories.map((category, index) => (\n            <Category key={category}>\n              {index ? \", \" : \"\"}\n              <LinkWrapper to={`/category/${category}/`}>\n                {category}\n              </LinkWrapper>\n            </Category>\n          ))}\n          <Title>\n            <LinkWrapper to={`/post${slug}`}>{title}</LinkWrapper>\n          </Title>\n          <Subtitle>{subtitle}</Subtitle>\n          <Date>{date}</Date>\n        </TextWrapper>\n      </Wrapper>\n    </Fade>\n  )\n}\n\nexport default BlogStub\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport BlogStub from \"./stub\"\n\nconst BlogWrapper = styled.div`\n  padding: 125px 0 100px 0;\n  background-color: #eeeeee;\n`\n\nconst BlogText = styled.div`\n  text-align: center;\n  font-size: 40px;\n  font-family: \"Barlow\", sans-serif;\n  text-transform: uppercase;\n`\n\nconst BlogIndex = () => {\n  const data = useStaticQuery(graphql`\n    {\n      posts: allMarkdownRemark(\n        sort: { fields: [frontmatter___date], order: DESC }\n        filter: { frontmatter: { published: { eq: true } } }\n      ) {\n        edges {\n          node {\n            fields {\n              slug\n            }\n            frontmatter {\n              date(formatString: \"MMMM D, YYYY\")\n              title\n              subtitle\n              image\n              categories\n            }\n          }\n        }\n      }\n      images: allFile(\n        filter: {\n          extension: { regex: \"/(jpg)|(jpeg)|(png)/\" }\n          relativeDirectory: { eq: \"blogImages\" }\n        }\n      ) {\n        edges {\n          node {\n            childImageSharp {\n              fluid(maxWidth: 1000) {\n                originalName\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n  return (\n    <BlogWrapper>\n      <div style={{ textAlign: \"center\" }}>welcome to</div>\n      <BlogText>My blog</BlogText>\n      {data.posts.edges.map(post => {\n        const postInfo = post.node.frontmatter\n\n        const postImage = data.images.edges.find(\n          x => x.node.childImageSharp.fluid.originalName === postInfo.image\n        )\n\n        return (\n          <BlogStub\n            slug={post.node.fields.slug}\n            key={postInfo.title}\n            title={postInfo.title}\n            date={postInfo.date}\n            subtitle={postInfo.subtitle}\n            image={postImage.node.childImageSharp.fluid}\n            caption={postInfo.caption}\n            categories={postInfo.categories}\n          />\n        )\n      })}\n    </BlogWrapper>\n  )\n}\n\nexport default BlogIndex\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport BlogIndex from \"../components/blog/index\"\n\nconst BlogPage = () => {\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <BlogIndex />\n    </Layout>\n  )\n}\n\nexport default BlogPage\n"],"sourceRoot":""}