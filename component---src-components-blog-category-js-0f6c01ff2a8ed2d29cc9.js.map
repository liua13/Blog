{"version":3,"sources":["webpack:///./src/components/blog/stub.js","webpack:///./src/components/blog/category.js"],"names":["Wrapper","styled","div","ImageWrapper","ImageComponent","Image","TextWrapper","Category","span","Title","Subtitle","Date","BlogStub","slug","title","date","subtitle","image","categories","caption","bottom","to","fluid","map","category","index","key","SectionWrapper","PostWrapper","BlogCategory","props","pageContext","posts","images","useStaticQuery","style","textAlign","postInfo","post","frontmatter","postImage","edges","find","x","node","childImageSharp","originalName","fields"],"mappings":"8FAAA,2FAOMA,EAAUC,IAAOC,IAAV,oEAAGD,CAAH,0JAcPE,EAAeF,IAAOC,IAAV,yEAAGD,CAAH,uIAaZG,EAAiBH,YAAOI,KAAV,2EAAGJ,CAAH,mGAOdK,EAAcL,IAAOC,IAAV,wEAAGD,CAAH,uHAWXM,EAAWN,IAAOO,KAAV,qEAAGP,CAAH,qFAaRQ,EAAQR,IAAOO,KAAV,kEAAGP,CAAH,gGAcLS,EAAWT,IAAOO,KAAV,qEAAGP,CAAH,2DAMRU,EAAOV,IAAOO,KAAV,iEAAGP,CAAH,mEA2CKW,IArCE,SAAC,GAQX,IAPLC,EAOI,EAPJA,KACAC,EAMI,EANJA,MACAC,EAKI,EALJA,KACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,MAEAC,GACI,EAFJC,QAEI,EADJD,YAEA,OACE,kBAAC,IAAD,CAAME,QAAM,GACV,kBAACpB,EAAD,KACE,kBAACG,EAAD,KACE,kBAAC,IAAD,CAAakB,GAAE,QAAUR,GACvB,kBAACT,EAAD,CAAgBkB,MAAOL,MAG3B,kBAACX,EAAD,KACGY,EAAWK,KAAI,SAACC,EAAUC,GAAX,OACd,kBAAClB,EAAD,CAAUmB,IAAKF,GACZC,EAAQ,KAAO,GAChB,kBAAC,IAAD,CAAaJ,GAAE,aAAeG,EAAf,KACZA,OAIP,kBAACf,EAAD,KACE,kBAAC,IAAD,CAAaY,GAAE,QAAUR,GAASC,IAEpC,kBAACJ,EAAD,KAAWM,GACX,kBAACL,EAAD,KAAOI,Q,kCCzHjB,4FAQMY,EAAiB1B,IAAOC,IAAV,8EAAGD,CAAH,MAEd2B,EAAc3B,IAAOC,IAAV,2EAAGD,CAAH,uDAKXM,EAAWN,IAAOC,IAAV,wEAAGD,CAAH,gGA+DC4B,UAxDM,SAAAC,GACnB,MAA4BA,EAAMC,YAA1BP,EAAR,EAAQA,SAAUQ,EAAlB,EAAkBA,MAEZC,EAASC,yBAAe,cAsB9B,OACE,kBAACP,EAAD,KACE,kBAAC,IAAD,MACA,kBAACC,EAAD,KACE,yBAAKO,MAAO,CAAEC,UAAW,WAAzB,YACA,kBAAC7B,EAAD,KAAWiB,GACVQ,EAAMT,KAAI,SAAAc,GACT,IAAMC,EAAOD,EAASE,YAChBC,EAAYP,EAAOA,OAAOQ,MAAMC,MACpC,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,gBAAgBvB,MAAMwB,eAAiBR,EAAKrB,SAG1D,OACE,kBAAC,IAAD,CACEJ,KAAMwB,EAASU,OAAOlC,KACtBa,IAAKY,EAAKxB,MACVA,MAAOwB,EAAKxB,MACZC,KAAMuB,EAAKvB,KACXC,SAAUsB,EAAKtB,SACfC,MAAOuB,EAAUI,KAAKC,gBAAgBvB,MACtCH,QAASmB,EAAKnB,QACdD,WAAYoB,EAAKpB,iBAKzB,kBAAC,IAAD","file":"component---src-components-blog-category-js-0f6c01ff2a8ed2d29cc9.js","sourcesContent":["import React from \"react\"\nimport Image from \"gatsby-image\"\nimport styled from \"styled-components\"\nimport Fade from \"react-reveal/Fade\"\n\nimport LinkWrapper from \"../linkWrapper\"\n\nconst Wrapper = styled.div`\n  margin: 30px auto;\n  clear: left;\n  display: block;\n  width: 800px;\n  overflow: hidden;\n  background-color: white;\n  border-radius: 20px;\n\n  @media (max-width: 850px) {\n    width: 85%;\n  }\n`\n\nconst ImageWrapper = styled.div`\n  float: left;\n  width: 39%;\n\n  :hover {\n    filter: brightness(60%);\n    -webkit-transition: all 0.5s ease-in-out;\n  }\n\n  @media (max-width: 850px) {\n    width: 100%;\n  }\n`\nconst ImageComponent = styled(Image)`\n  width: 100%;\n  border-radius: 20px 0 0 20px;\n  @media (max-width: 850px) {\n    border-radius: 20px 20px 0 0;\n  }\n`\nconst TextWrapper = styled.div`\n  margin: auto;\n  width: 55%;\n  display: inline-block;\n  padding: 20px 3%;\n  @media (max-width: 850px) {\n    padding: 20px 20px;\n    width: 90%;\n  }\n`\n\nconst Category = styled.span`\n  text-transform: uppercase;\n  font-size: 15px;\n\n  a {\n    color: purple;\n  }\n\n  a:hover {\n    color: #a9a9a9;\n  }\n`\n\nconst Title = styled.span`\n  margin: 5px 0px 10px 0px;\n  font-size: 30px;\n  display: block;\n\n  a {\n    color: black;\n  }\n\n  a:hover {\n    color: purple;\n  }\n`\n\nconst Subtitle = styled.span`\n  display: block;\n  font-size: 17px;\n  margin: 0px 0px 15px 0px;\n`\n\nconst Date = styled.span`\n  display: block;\n  font-size: 14px;\n  font-family: \"Barlow\", sans-serif;\n`\n\nconst BlogStub = ({\n  slug,\n  title,\n  date,\n  subtitle,\n  image,\n  caption,\n  categories,\n}) => {\n  return (\n    <Fade bottom>\n      <Wrapper>\n        <ImageWrapper>\n          <LinkWrapper to={`/post${slug}`}>\n            <ImageComponent fluid={image} />\n          </LinkWrapper>\n        </ImageWrapper>\n        <TextWrapper>\n          {categories.map((category, index) => (\n            <Category key={category}>\n              {index ? \", \" : \"\"}\n              <LinkWrapper to={`/category/${category}/`}>\n                {category}\n              </LinkWrapper>\n            </Category>\n          ))}\n          <Title>\n            <LinkWrapper to={`/post${slug}`}>{title}</LinkWrapper>\n          </Title>\n          <Subtitle>{subtitle}</Subtitle>\n          <Date>{date}</Date>\n        </TextWrapper>\n      </Wrapper>\n    </Fade>\n  )\n}\n\nexport default BlogStub\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport Nav from \"../nav\"\nimport Footer from \"../footer\"\nimport BlogComponent from \"./stub\"\n\nconst SectionWrapper = styled.div``\n\nconst PostWrapper = styled.div`\n  padding: 125px 0 100px 0;\n  background-color: #eeeeee;\n`\n\nconst Category = styled.div`\n  text-align: center;\n  font-size: 40px;\n  font-family: \"Barlow\", sans-serif;\n  text-transform: uppercase;\n`\n\nconst BlogCategory = props => {\n  const { category, posts } = props.pageContext\n\n  const images = useStaticQuery(graphql`\n    {\n      images: allFile(\n        filter: {\n          extension: { regex: \"/(jpg)|(jpeg)|(png)/\" }\n          relativeDirectory: { eq: \"blogImages\" }\n        }\n      ) {\n        edges {\n          node {\n            childImageSharp {\n              fluid(maxWidth: 1000) {\n                originalName\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <SectionWrapper>\n      <Nav />\n      <PostWrapper>\n        <div style={{ textAlign: \"center\" }}>category</div>\n        <Category>{category}</Category>\n        {posts.map(postInfo => {\n          const post = postInfo.frontmatter\n          const postImage = images.images.edges.find(\n            x => x.node.childImageSharp.fluid.originalName === post.image\n          )\n\n          return (\n            <BlogComponent\n              slug={postInfo.fields.slug}\n              key={post.title}\n              title={post.title}\n              date={post.date}\n              subtitle={post.subtitle}\n              image={postImage.node.childImageSharp.fluid}\n              caption={post.caption}\n              categories={post.categories}\n            />\n          )\n        })}\n      </PostWrapper>\n      <Footer />\n    </SectionWrapper>\n  )\n}\n\nexport default BlogCategory\n"],"sourceRoot":""}